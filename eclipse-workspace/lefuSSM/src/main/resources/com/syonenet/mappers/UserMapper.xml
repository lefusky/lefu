<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syonenet.dao.UserDao">

	<resultMap id="UserMap" type="User">
		<id property="userId" column="user_id" />
		<result property="userLogId"  column="user_logId" />
		<result property="userPassword"  column="user_password" />
		<result property="roleId"  column="role_id" />
		<result property="userNick"  column="user_nick" />
		<result property="departmentId"  column="department_id" />
		<result property="departmentName"  column="department_name" />
		<result property="addTime"  column="add_time" />
		<result property="statusId"  column="status_id" />
		<result property="errorCount"  column="error_count" />
		<result property="errorTime"  column="error_time" />
		
		<!-- 获取部门集合 -->
		<collection property="departmentList" column="user_id"
			select="com.syonenet.mappers.PartMapper.findDepartmentListByUser">
		</collection>
		
		<!-- 获取权限集合 -->
		<collection property="permissionList" column="user_id"
			select="com.syonenet.mappers.PartMapper.findPermissionListByUser">
		</collection>
	</resultMap>
	
	<resultMap id="UserMapList" type="User">
		<id property="userId" column="user_id" />
		<result property="userLogId"  column="user_logId" />
		<result property="userPassword"  column="user_password" />
		<result property="roleId"  column="role_id" />
		<result property="userNick"  column="user_nick" />
		<result property="departmentId"  column="department_id" />
		<result property="departmentName"  column="department_name" />
		<result property="addTime"  column="add_time" />
		<result property="statusId"  column="status_id" />
		<result property="errorCount"  column="error_count" />
		<result property="errorTime"  column="error_time" />
	</resultMap>
	
	<select id="findUserList" parameterType="Map" resultMap="UserMapList">
		select * from tbl_user where 1 = 1
		<if test="roleId != null">
			and role_id = #{roleId}
		</if>
		<if test="departmentList != null">
			and department_id in
			<foreach collection="departmentList" item="department" index="index" open="("  separator="," close=")">  
				(#{department.departmentId})  
			</foreach> 
		</if>
		order by user_id desc
		<if test="start != null and size != null">
			limit #{start}, #{size}
		</if>
	</select>
	
	<select id="findUserCount" parameterType="Map" resultType="Integer">
		select count(*) from tbl_user where 1 = 1
		<if test="roleId != null and roleId != ''">
			and role_id = #{roleId}
		</if>
		<if test="departmentList != null">
			and department_id in
			<foreach collection="departmentList" item="department" index="index" open="("  separator="," close=")">  
				(#{department.departmentId})  
			</foreach> 
		</if>
	</select>
	
	<insert id="addUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
		insert into tbl_user(user_logId, user_password, role_id, user_nick, department_id, department_name, add_time)
		values(#{userLogId}, #{userPassword}, #{roleId}, #{userNick}, #{departmentId}, (SELECT department_name FROM tbl_department WHERE department_id=#{departmentId}), #{addTime})
	</insert>
	
	<insert id="addUserDepartment" parameterType="User">
		insert into user_department values
		<foreach collection="departmentIds" item="departmentId" index="index" separator="," >  
			(#{userId},#{departmentId})  
		</foreach> 
	</insert>
	
	<insert id="addUserPermission" parameterType="User">
		insert into user_permission values
		<foreach collection="permissionIds" item="permissionId" index="index" separator="," >  
			(#{userId},#{permissionId})  
		</foreach> 
	</insert>
	
	<select id="findUserByUserLogId" parameterType="String" resultMap="UserMap">
		select * from tbl_user where user_logId = #{userLogId}
	</select>
	
	<select id="findUserByUserId" parameterType="Integer" resultMap="UserMap">
		select * from tbl_user where user_id = #{userId}
	</select>
	
	<update id="updateUser" parameterType="User">
		update tbl_user
		<set>
			<if test="userPassword != null and userPassword != ''">
				user_password = #{userPassword},
			</if>
			<if test="roleId != null and roleId != ''">
				role_id = #{roleId},
			</if>
			<if test="userNick != null and userNick != ''">
				user_nick = #{userNick},
			</if>
			<if test="departmentId != null and departmentId != ''">
				department_id = #{departmentId},
				department_name = (SELECT department_name FROM tbl_department WHERE department_id=#{departmentId}),
			</if>
			<if test="statusId != null and statusId != ''">
				status_id = #{statusId},
			</if>
		</set>
		where user_id=#{userId}
	</update>
	
	<update id="updateUserError" parameterType="User">
		update tbl_user
			<set>
				<if test="errorCount != null and errorTime != ''">
					error_count = #{errorCount},
				</if>
				<if test="errorTime != null and errorTime != ''">
					error_time = #{errorTime},
				</if>
			</set>
		where user_id=#{userId}
	</update>
	
	<update id="updateUserPassWord" parameterType="User">
		update tbl_user
			<set>
				<if test="userPassword != null and userPassword != ''">
					user_password = #{userPassword},
				</if>
			</set>
		where user_id=#{userId}
	</update>
	
	<update id="modifyUserMessage" parameterType="Integer">
		update tbl_user
			<set>
				error_count= 0,
				error_time= null,
			</set>
		where user_id=#{userId}
	</update>
	
	<delete id="deleteUser" parameterType="Integer">
		delete from tbl_user where user_id = #{userId}
	</delete>
	
	<delete id="deleteUserDepartment" parameterType="Integer">
		delete from user_department where user_id = #{userId}
	</delete>
	
	<resultMap id="DepartmentMap" type="Department">
		<id property="departmentId" column="department_id" />
		<result property="departmentName"  column="department_name" />
	</resultMap>
	
	<select id="findDepartmentList" parameterType="Map" resultMap="DepartmentMap">
		select * from tbl_department
	</select>
	
	<resultMap id="PermissionMap" type="Permission">
		<id property="permissionId" column="permission_id" />
		<result property="permissionPid"  column="permission_pid" />
		<result property="permissionName"  column="permission_name" />
		<result property="permissionEnd"  column="permission_end" />
		<result property="permissionUrl"  column="permission_url" />
		<result property="permissionDesc"  column="permission_desc" />
	</resultMap>
	
	<select id="findPermissionList" parameterType="Map" resultMap="PermissionMap">
		select * from tbl_permission
	</select>
	
	<select id="findPermissionListByPid" parameterType="Integer" resultMap="PermissionMap">
		select * from tbl_permission where permission_pid = #{permissionPid}
	</select>
	
	<delete id="deleteUserPermission" parameterType="Integer">
		delete from user_permission where user_id = #{userId}
	</delete>

</mapper> 